// Generated by CodiumAI
import { describe, it, expect } from 'vitest'
import { findFirstRepeated } from './findFirstRepeated'
// Generated by CodiumAI

describe('findFirstRepeated', () => {
  // Returns the first repeated number with smallest index
  it('should return the first repeated number with smallest index', () => {
    const giftIds = [2, 1, 3, 5, 3, 2]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(3)
  })

  // Returns -1 if no number is repeated
  it('should return -1 if no number is repeated', () => {
    const giftIds = [1, 2, 3, 4]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(-1)
  })

  // Works with an array of integers
  it('should work with an array of integers', () => {
    const giftIds = [2, 1, 3, 5, 3, 2]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(3)
  })

  // Returns the correct number when the first number is repeated
  it('should return the correct number when the first number is repeated', () => {
    const giftIds = [2, 2, 3, 5, 3, 2]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(2)
  })

  // Returns the correct number when the last number is repeated
  it('should return the correct number when the last number is repeated', () => {
    const giftIds = [2, 1, 3, 5, 3, 3]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(3)
  })

  // Returns the correct number when all numbers are repeated
  it('should return the correct number when all numbers are repeated', () => {
    const giftIds = [2, 2, 2, 2, 2, 2]
    const result = findFirstRepeated(giftIds)
    expect(result).toEqual(2)
  })
})
